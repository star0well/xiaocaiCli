<template>
  <div class="<%= data.lowerName %>">
    <PageContent
      ref="pageConentRef"
      v-bind="contentTableConfig(width)"
      :datas-fn=" <%= data.lowerName %>GetList"
      :search-list="searchList">
      <template #searchBtn>
        <el-button :icon="Plus" @click="hanldeAdd('新增')" v-perM="[1052]" type="primary">新增</el-button>
        <el-button :icon="Download" v-perM="[1054]" @click="downloadEX">导出</el-button>
      </template>
      <template #img_url="{ row }">
        <el-image class="img" :src="getImg(row.imgUrl)[0]"></el-image>
      </template>
      <template #operation="{ row }">
        <div class="operation">
          <el-button size="small" class="" @click="hanldeDetail(row)">详情</el-button>
          <el-button size="small" class="edit m-r-3" @click="hanldePatch(row)" v-perM="[1051]">编辑</el-button>
          <TipsBtn
            btn-name="删除"
            content="确认删除?"
            size="small"
            v-perM="[1053]"
            @on-confirm="hanldeDelete(row)"></TipsBtn>
        </div>
      </template>
    </PageContent>
    <PageModal
      class="detailModal"
      ref="addRef"
      :form-field-list="modalList()"
      :title="title()"
      @submit="onConfirm"
      :showConfirmBtn="current != 2">
    </PageModal>
  </div>
</template>

<script setup>
  import TipsBtn from "@/base-ui/tipsBtn/tipsBtn.vue";
  import PageContent from "@/components/pageContent.vue";
  import PageModal from "@/components/pageModal.vue";
  import { useMaxWidth } from "@/hooks/useMaxwidth";
  import {
    <%= data.lowerName %>Add,
    <%= data.lowerName %>Delete,
    <%= data.lowerName %>Export,
    <%= data.lowerName %>GetList,
    <%= data.lowerName %>Patch,
  } from "@/service/<%= data.lowerName %>/<%= data.lowerName %>";
  import { Download, Plus } from "@element-plus/icons-vue";
  import { fileDownlod } from "aiy-utils";
  import { ref } from "vue";
  import { contentTableConfig, current, modalList, searchList } from "./<%= data.lowerName %>Config";
  const title = () => {
    let str = "";
    switch (current.value) {
      case 0:
        str = "新增";
        break;
      case 1:
        str = "编辑";
        break;
      case 2:
        str = "详情";
        break;
      default:
        break;
    }
    return str;
  };
  const addRef = ref();
  const pageConentRef = ref();
  const hanldeAdd = () => {
    current.value = 0;
    addRef.value.formData = {};

    addRef.value.open();
  };
  const hanldePatch = async (row) => {
    current.value = 1;
    addRef.value.formData = { ...row };
    addRef.value.open();
  };
  const hanldeDelete = async ({ <%= data.lowerName %>Id }) => {
    await  <%= data.lowerName %>Delete({ ids: [<%= data.lowerName %>Id] });
    pageConentRef.value.getDatas();
  };
  const hanldeDetail = (row) => {
    current.value = 2;
    addRef.value.formData = { ...row };
    addRef.value.open();
  };
  const onConfirm = async (item) => {
    try {
      switch (current.value) {
        case 0:
          await  <%= data.lowerName %>Add(item);
          break;
        case 1:
          await  <%= data.lowerName %>Patch(item);
          break;
        default:
          break;
      }
      addRef.value.close();
      pageConentRef.value.getDatas();
    } catch (error) {}
  };

  const downloadEX = () => {
     <%= data.lowerName %>Export().then((res) => {
      fileDownlod(res, "测评分类.xls", { type: "application/vnd.ms-excel" });
    });
  };
  const { width } = useMaxWidth("operation");
</script>

<style scoped lang="scss">
  .<%= data.lowerName %> {
    background-color: #ffffff;
    padding: 24px;
    border-radius: 8px;
    box-sizing: border-box;
    .dele {
      color: #f74b1a;
      cursor: pointer;
    }

    .edit {
      color: $main-color;
      cursor: pointer;
    }
  }
</style>
